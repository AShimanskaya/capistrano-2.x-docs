Capistrano's configuration is managed through a set of magic variables. Some only take effect under certain circumstances, and others will affect all operations.

Please see the table below for more information:

|^. <code>:application</code>      | Arbitrary variable, useful to store your application name within. |
|^. <code>:user</code>             | The SSH username you are logging into the server(s) as. In collaborative development, you might not want to embed your own username here, since other developers might be deploying, too. [[Using SSH Keys]] is recommended. |
|^. <code>:password</code>         | The SSH password you are logging into the server(s) with. It should be the password that matches the :user variable. It is generally not a good idea to hard-code this variable into the file, except while you are first getting familiar with Capistrano. It is much better idea to setup SSH public/private keys - in which case this variable does not need to be set at all. Again [[Using SSH Keys]] is recommended. |
|^. <code>:scm</code>              | For specifying the type of source control system you are using. It is set to `git` by default. It is unnecessary to set it explicitly unless you are using something else. See the [[Source Control]] section for more info. |
|^. <code>:scm_username</code>     | The username that your [[Source Control]] system will use to access the repository. |
|^. <code>:scm_password</code>     | The password that your source control system (for ex: subversion) will use to access the repository. It is generally not a good idea to hard-code this variable into the file, except while you are first getting familiar with Capistrano. It is a better idea to investigate [[Using SSH Keys]]. Where [[Using SSH Keys]] is not an option [[SCM Credential Caching]] might be appropriate. |
|^. <code>:repository</code>       | The URL of the repository that hosts our code for example <code>http://github.com/capistrano/capistrano.git</code> or <code>git@github.com/capistrano/capistrano.git</code>. If you are hosting the repository on your own. |
|^. <code>:local_repository</code> | The repository URL that should be used when querying from your workstation. If this is set, <code>:repository</code>, becomes the URL that should be used when querying the repository from the remote hosts. *This is handy when you are accessing the repository via different methods locally vs. remotely:* <pre>set :repository, "file:///var/svn/repos/my_app"
set :local_repository, "svn+ssh://#{user}@servername.com/var/svn/repos/my_app"</pre> A more thorough explanation is available at "here":http://lee.hambley.name/2010/03/22/self-hosted-repositories-with-capistrano-and-git/. (20110817: Dead link)|
|^. <code>:deploy_to</code>        | The path on the servers we're going to be deploying the application to. For example <code>/var/www/my-application</code>. The default is <code>/u/apps/</code>. |
|^. <code>:use_sudo</code>         | Defines for the *default* Rails deployment recipes whether we want to use <code>sudo</code> or not. <code>sudo</code> is a unix tool for executing commands as the "root user":http://en.wikipedia.org/wiki/Root_user. To use it, your user must have *password-less* <code>sudo</code> access enabled. If you're using shared hosting where <code>sudo</code> access may not be enabled for your user, you should set <code>:use_sudo</code> to false. *In general, if you can get away without using <code>sudo</code>, you should avoid it*. For example, 37signals now uses a system where they have a special deployment user, and always deploy as that user. |
|^. <code>:migrate_env</code> | The environment in which to run Rails migrations, this has no default, and is thus the default of <code>rake db:migrate</code>. |
|^. <code>:rake</code> | The full path to "rake":http://rake.rubyforge.org/ on your system. Defaults to <code>rake</code>; e.g. the current directory. |
|^. <code>:keep_releases</code> | The number of old releases to keep, defaults to 5, can be overridden with any positive integer, negative values will produce undefined behaviour. 0 means zero. *The deploy:cleanup task is not run in the "Default Deployment Behaviour":https://github.com/capistrano/capistrano/wiki/2.x-Default-Deployment-Behaviour, so you must run it manually or add it to your recipe.* |